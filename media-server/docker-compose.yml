version: '3.8'

# Automated Torrenting Stack with VPN Protection
# Includes: Gluetun (VPN), qBittorrent, Radarr, Sonarr, Prowlarr, Overseerr, and Jellyfin
services:
  # VPN Container - All torrent traffic is routed through here
  gluetun:
    container_name: gluetun
    image: qmcgaw/gluetun:latest
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun:/dev/net/tun
    ports:
      - '8080:8080'   # qbittorrent
      - '8096:8096'   # jellyfin
      - '9696:9696'   # prawlarr
      - '7878:7878'   # radarr
      - '8989:8989'   # sonarr
    environment:
      - VPN_SERVICE_PROVIDER=private internet access
      - OPENVPN_USER=${VPN_USER}
      - OPENVPN_PASSWORD=${VPN_PW}
      - SERVER_REGIONS=Netherlands
      - VPN_PORT_FORWARDING=on
      - VPN_PORT_FORWARDING_UP_COMMAND=/bin/sh -c 'wget -O- --retry-connrefused --post-data "json={\"listen_port\":{{PORTS}}}" http://127.0.0.1:8080/api/v2/app/setPreferences 2>&1 && /bin/sh -c "echo set bittorrent port forwarding to {{PORTS}}"'
    volumes:
      - ./gluetun:/gluetun
    restart: unless-stopped

  # Torrent client - Routes through VPN
  qbittorrent:
    container_name: qbittorrent
    image: linuxserver/qbittorrent:latest
    network_mode: "service:gluetun"  # Routes all traffic through VPN
    depends_on:
      - gluetun
    environment:
      - PUID=1000  # Change to your user ID
      - PGID=1000  # Change to your group ID
      - TZ=Europe/Berlin
      - WEBUI_PORT=8080
    volumes:
      - /config/qbittorrent:/config
      - /downloads:/downloads
      - /media:/media
    restart: unless-stopped

  # Movie management
  radarr:
    container_name: radarr
    image: linuxserver/radarr:latest
    depends_on:
      - gluetun
      - qbittorrent
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Berlin
    volumes:
      - /config/radarr:/config
      - /downloads:/downloads
      - /media:/media
    network_mode: "service:gluetun"  # Routes through VPN
    restart: unless-stopped

  # TV show management
  sonarr:
    container_name: sonarr
    image: linuxserver/sonarr:latest
    depends_on:
      - gluetun
      - qbittorrent
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Berlin
    volumes:
      - /config/sonarr:/config
      - /downloads:/downloads
      - /media:/media
    network_mode: "service:gluetun"  # Routes through VPN
    restart: unless-stopped

  # Indexer management
  prowlarr:
    container_name: prowlarr
    image: linuxserver/prowlarr:latest
    depends_on:
      - gluetun
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Berlin
    volumes:
      - /config/prowlarr:/config
    network_mode: "service:gluetun"  # Routes through VPN
    restart: unless-stopped

  flaresolverr:
    # DockerHub mirror flaresolverr/flaresolverr:latest
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    network_mode: "service:gluetun"  # Routes through VPN

    environment:
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_HTML=${LOG_HTML:-false}
      - CAPTCHA_SOLVER=${CAPTCHA_SOLVER:-none}
      - TZ=Europe/London

    restart: unless-stopped

  # Media server
  jellyfin:
    container_name: jellyfin
    image: jellyfin/jellyfin:latest
    group_add:
      - "993" # "video" group
      - "44" # render group for GPU passthrough change accordingly
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Berlin
    volumes:
      - /config/jellyfin:/config
      - /data/cache:/cache
      - /media:/media
    network_mode: "service:gluetun"  # Routes through VPN
    devices:
      - /dev/dri/renderD128:/dev/dri/renderD128 # GPU passthrough for transcoding
    restart: unless-stopped